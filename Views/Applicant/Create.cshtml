@model MasterDetails_Crud.Models.Applicant

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Applicant", FormMethod.Post, new {enctype="multipart/form-data"})) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Applicant</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })   
    


    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.TotalExprience, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TotalExprience, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TotalExprience, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="Picture"/>
            @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsAvailable)
                @Html.ValidationMessageFor(model => model.IsAvailable, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="form-group">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" name="btn" class="btn btn-success" />
            </div>
        </div>
    </div>



    <div class="form-group">
        <table class="table">
            <tr>
                <th>Company Name</th>
                <th>Year Of Exprience</th>
                <th>Designation</th>
            </tr>
            @for (int i = 0; i < Model.ApplicantExes.Count; i++)
            {
                <tr>
                    <td>@Html.EditorFor(m => Model.ApplicantExes[i].CompanyName, new { htmlAttributes = new { @class = "form-control" } })</td>
                    <td>@Html.EditorFor(m => Model.ApplicantExes[i].YearOfExperience, new { htmlAttributes = new { @class = "form-control" } })</td>
                    <td>@Html.EditorFor(m => Model.ApplicantExes[i].Designation, new { htmlAttributes = new { @class = "form-control" } })</td>
                    <td>
                        <div class="form-group">
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Remove" onclick="Remove(this)" name="btn" class="btn btn-danger" />
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
            }

        </table>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" name="btn" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    funtion Remove(e)
    {
        $(e).closest("tr").remove();
    }
    </script>
}
